# Generated by Django 3.2.10 on 2022-02-12 14:24

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalAnnouncement',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('enabled', models.BooleanField(default=False)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GlobalEmailTemplate',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('welcome', 'welcome'), ('alert', 'alert')], max_length=30, unique=True)),
                ('enabled', models.BooleanField(default=False)),
                ('HTML', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ScanList',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('public', models.BooleanField(default=False)),
                ('communityShared', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('enableTalkGroupACLs', models.BooleanField(default=False, verbose_name='Enable Talkgroup ACLs')),
                ('pruneTransmissions', models.BooleanField(default=False, verbose_name='Enable Pruneing Transmissions')),
                ('pruneTransmissionsAfterDays', models.IntegerField(default=365, verbose_name='Days to keep Transmissions (Prune)')),
            ],
        ),
        migrations.CreateModel(
            name='SystemRecorder',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('siteID', models.CharField(blank=True, max_length=100, null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('forwarderWebhookUUID', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.system')),
            ],
        ),
        migrations.CreateModel(
            name='TalkGroup',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('decimalID', models.IntegerField(db_index=True)),
                ('alphaTag', models.CharField(blank=True, default='', max_length=30)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('mode', models.CharField(choices=[('digital', 'Digital'), ('analog', 'Analog'), ('tdma', 'TDMA')], default='digital', max_length=250)),
                ('encrypted', models.BooleanField(blank=True, default=False)),
                ('agency', models.ManyToManyField(blank=True, to='radio.Agency')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.system')),
            ],
        ),
        migrations.CreateModel(
            name='TransmissionFreq',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('time', models.DateTimeField()),
                ('freq', models.IntegerField(db_index=True, default=0)),
                ('pos', models.IntegerField(default=0)),
                ('len', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('spike_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('decimalID', models.IntegerField(db_index=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.system')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('siteAdmin', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('siteTheme', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAlert',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=250)),
                ('enabled', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('webNotification', models.BooleanField(default=False)),
                ('appRiseNotification', models.BooleanField(default=False)),
                ('appRiseURLs', models.TextField(default='', verbose_name=', Seperated AppriseURL(s)')),
                ('emergencyOnly', models.BooleanField(default=False)),
                ('title', models.CharField(default='New Activity Alert', max_length=255)),
                ('body', models.TextField(default='New Activity on %T - %I')),
                ('talkgroups', models.ManyToManyField(blank=True, to='radio.TalkGroup')),
                ('units', models.ManyToManyField(blank=True, to='radio.Unit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='radio.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TransmissionUnit',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('time', models.DateTimeField(db_index=True)),
                ('pos', models.IntegerField(default=0)),
                ('emergency', models.BooleanField(default=0)),
                ('signal_system', models.CharField(blank=True, default='', max_length=50)),
                ('tag', models.CharField(blank=True, default='', max_length=255)),
                ('length', models.FloatField(default=0.0)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Transmission',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField(blank=True, null=True)),
                ('audioFile', models.FileField(upload_to='audio/%Y/%m/%d/')),
                ('encrypted', models.BooleanField(db_index=True, default=False)),
                ('emergency', models.BooleanField(db_index=True, default=False)),
                ('frequency', models.FloatField(default=0.0)),
                ('length', models.FloatField(default=0.0)),
                ('locked', models.BooleanField(db_index=True, default=False)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('frequencys', models.ManyToManyField(to='radio.TransmissionFreq')),
                ('recorder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.systemrecorder')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.system')),
                ('talkgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.talkgroup')),
                ('units', models.ManyToManyField(to='radio.TransmissionUnit')),
            ],
            options={
                'ordering': ['-startTime'],
            },
        ),
        migrations.CreateModel(
            name='TalkGroupACL',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('defaultNewUsers', models.BooleanField(default=True)),
                ('defaultNewTalkgroups', models.BooleanField(default=True)),
                ('downloadAllowed', models.BooleanField(default=True)),
                ('allowedTalkgroups', models.ManyToManyField(to='radio.TalkGroup')),
                ('users', models.ManyToManyField(to='radio.UserProfile')),
            ],
        ),
        migrations.AddField(
            model_name='systemrecorder',
            name='talkgroupsAllowed',
            field=models.ManyToManyField(blank=True, related_name='SRTGAllow', to='radio.TalkGroup'),
        ),
        migrations.AddField(
            model_name='systemrecorder',
            name='talkgroupsDenyed',
            field=models.ManyToManyField(blank=True, related_name='SRTGDeny', to='radio.TalkGroup'),
        ),
        migrations.AddField(
            model_name='systemrecorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='radio.userprofile'),
        ),
        migrations.CreateModel(
            name='SystemForwarder',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('enabled', models.BooleanField(default=False)),
                ('recorderKey', models.UUIDField()),
                ('remoteURL', models.CharField(max_length=250)),
                ('forwardIncidents', models.BooleanField(default=False)),
                ('forwardedSystems', models.ManyToManyField(to='radio.System')),
                ('talkGroupFilter', models.ManyToManyField(blank=True, to='radio.TalkGroup')),
            ],
        ),
        migrations.CreateModel(
            name='SystemACL',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('public', models.BooleanField(default=False)),
                ('users', models.ManyToManyField(to='radio.UserProfile')),
            ],
        ),
        migrations.AddField(
            model_name='system',
            name='systemACL',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.systemacl'),
        ),
        migrations.CreateModel(
            name='Scanner',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('public', models.BooleanField(default=True)),
                ('communityShared', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.userprofile')),
                ('scanlists', models.ManyToManyField(to='radio.ScanList')),
            ],
        ),
        migrations.AddField(
            model_name='scanlist',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.userprofile'),
        ),
        migrations.AddField(
            model_name='scanlist',
            name='talkgroups',
            field=models.ManyToManyField(to='radio.TalkGroup'),
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('UUID', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('agency', models.ManyToManyField(blank=True, to='radio.Agency')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.system')),
                ('transmission', models.ManyToManyField(blank=True, to='radio.Transmission')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.AddField(
            model_name='agency',
            name='city',
            field=models.ManyToManyField(blank=True, to='radio.City'),
        ),
    ]
